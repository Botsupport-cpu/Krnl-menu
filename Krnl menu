local UIS = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local HTTPService = game:GetService("HttpService")

-- VARIABLES --
local mainGui, speedGui, backdoorGui
local _G.ScriptCache = {}

-- NOTIFICATION FUNCTION --
local function ShowNotification(message, color)
    local notify = Instance.new("ScreenGui")
    notify.Name = "Notification"
    notify.Parent = CoreGui

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.6, 0, 0.08, 0)
    frame.Position = UDim2.new(0.2, 0, 0.1, 0)
    frame.BackgroundColor3 = color or Color3.fromRGB(0, 170, 0)
    frame.BorderSizePixel = 0

    local label = Instance.new("TextLabel")
    label.Text = message
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1, 1, 1)
    label.Font = Enum.Font.GothamBold
    label.TextScaled = true
    label.Parent = frame
    frame.Parent = notify

    -- ANIMATION
    frame.Position = UDim2.new(0.2, 0, -0.1, 0)
    local tweenIn = TweenService:Create(
        frame,
        TweenInfo.new(0.5),
        {Position = UDim2.new(0.2, 0, 0.1, 0)}
    )
    tweenIn:Play()

    task.delay(3, function()
        local tweenOut = TweenService:Create(
            frame,
            TweenInfo.new(0.5),
            {Position = UDim2.new(0.2, 0, -0.1, 0)}
        )
        tweenOut:Play()
        tweenOut.Completed:Connect(function()
            notify:Destroy()
        end)
    end)
end

-- ADVANCED LOADSTRING WITH REQUIRE SUPPORT --
local function AdvancedLoadString(scriptCode)
    -- Create custom environment with require support
    local env = {
        require = function(module)
            if _G.ScriptCache[module] then
                return _G.ScriptCache[module]
            end
            
            -- Try to load from game
            local success, result = pcall(function()
                return game:GetService(module)
            end)
            
            if success then return result end
            
            -- Try to load from ReplicatedStorage
            success, result = pcall(function()
                return game:GetService("ReplicatedStorage"):FindFirstChild(module)
            end)
            
            if success and result then return result end
            
            -- Try to load from HTTP
            success, result = pcall(function()
                if module:find("^https?://") then
                    return HTTPService:GetAsync(module)
                end
            end)
            
            if success and result then
                _G.ScriptCache[module] = result
                return result
            end
            
            error("Cannot require: " .. tostring(module))
        end,
        
        getfenv = getfenv or function() return env end,
        setfenv = setfenv or function(f, e) return f end,
        
        -- Backdoor functions
        Backdoor = {
            Execute = function(code)
                loadstring(code)()
            end,
            GetPlayers = function()
                return Players:GetPlayers()
            end,
            GetCharacter = function(player)
                return player.Character
            end
        }
    }
    
    -- Set metatable to access global functions
    setmetatable(env, {__index = getfenv()})
    
    -- Execute with custom environment
    local fn, errorMsg = loadstring(scriptCode)
    if fn then
        setfenv(fn, env)
        return pcall(fn)
    else
        return false, errorMsg
    end
end

-- DRAGGABLE FUNCTION --
local function EnableMobileDrag(frame)
    local touchStartPos, frameStartPos
    
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            touchStartPos = input.Position
            frameStartPos = frame.Position
        end
    end)
    
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            local touch = input
            touch.Changed:Connect(function()
                if touch.UserInputState == Enum.UserInputState.Change then
                    local delta = touch.Position - touchStartPos
                    frame.Position = UDim2.new(
                        frameStartPos.X.Scale, 
                        frameStartPos.X.Offset + delta.X,
                        frameStartPos.Y.Scale, 
                        frameStartPos.Y.Offset + delta.Y
                    )
                end
            end)
        end
    end)
end

-- BACKDOOR MENU --
local function CreateBackdoorMenu()
    if backdoorGui and backdoorGui.Parent then
        backdoorGui:Destroy()
    end

    local gui = Instance.new("ScreenGui")
    gui.Name = "Backdoor_Menu"
    gui.ResetOnSpawn = false
    gui.Parent = CoreGui

    local backdoorFrame = Instance.new("Frame")
    backdoorFrame.Size = UDim2.new(0.7, 0, 0.3, 0)
    backdoorFrame.Position = UDim2.new(0.15, 0, 0.6, 0)
    backdoorFrame.BackgroundColor3 = Color3.fromRGB(30, 25, 35)
    backdoorFrame.Active = true

    local title = Instance.new("TextLabel")
    title.Text = "üîì BACKDOOR ACCESS"
    title.Size = UDim2.new(1, 0, 0.2, 0)
    title.BackgroundColor3 = Color3.fromRGB(60, 0, 80)
    title.TextColor3 = Color3.new(1, 0.5, 1)
    title.Font = Enum.Font.GothamBold
    title.TextScaled = true

    local urlBox = Instance.new("TextBox")
    urlBox.PlaceholderText = "Enter script URL or local path..."
    urlBox.Size = UDim2.new(0.9, 0, 0.2, 0)
    urlBox.Position = UDim2.new(0.05, 0, 0.25, 0)
    urlBox.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    urlBox.TextColor3 = Color3.new(1, 1, 1)

    local loadBtn = Instance.new("TextButton")
    loadBtn.Text = "üì• LOAD EXTERNAL"
    loadBtn.Size = UDim2.new(0.4, 0, 0.2, 0)
    loadBtn.Position = UDim2.new(0.05, 0, 0.5, 0)
    loadBtn.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
    loadBtn.TextColor3 = Color3.new(1, 1, 1)

    local requireBtn = Instance.new("TextButton")
    requireBtn.Text = "üîÑ REQUIRE MODULE"
    requireBtn.Size = UDim2.new(0.4, 0, 0.2, 0)
    requireBtn.Position = UDim2.new(0.55, 0, 0.5, 0)
    requireBtn.BackgroundColor3 = Color3.fromRGB(200, 100, 0)
    requireBtn.TextColor3 = Color3.new(1, 1, 1)

    -- ASSEMBLY
    title.Parent = backdoorFrame
    urlBox.Parent = backdoorFrame
    loadBtn.Parent = backdoorFrame
    requireBtn.Parent = backdoorFrame
    backdoorFrame.Parent = gui

    EnableMobileDrag(backdoorFrame)

    -- FUNCTIONALITY
    loadBtn.MouseButton1Click:Connect(function()
        local url = urlBox.Text
        if url and url ~= "" then
            local success, result = pcall(function()
                return HTTPService:GetAsync(url)
            end)
            
            if success then
                local execSuccess, errorMsg = AdvancedLoadString(result)
                if execSuccess then
                    ShowNotification("‚úÖ External script loaded!", Color3.fromRGB(0, 200, 0))
                else
                    ShowNotification("‚ùå Execution error: " .. tostring(errorMsg), Color3.fromRGB(200, 0, 0))
                end
            else
                ShowNotification("‚ùå Failed to load: " .. tostring(result), Color3.fromRGB(200, 0, 0))
            end
        end
    end)

    requireBtn.MouseButton1Click:Connect(function()
        local moduleName = urlBox.Text
        if moduleName and moduleName ~= "" then
            local success, result = pcall(function()
                return require(moduleName)
            end)
            
            if success then
                ShowNotification("‚úÖ Module required: " .. tostring(result), Color3.fromRGB(0, 200, 0))
            else
                ShowNotification("‚ùå Require failed: " .. tostring(result), Color3.fromRGB(200, 0, 0))
            end
        end
    end)

    backdoorGui = gui
    return gui
end

-- MAIN MENU --
local function CreateMainMenu()
    local gui = Instance.new("ScreenGui")
    gui.Name = "Advanced_KRNL_Menu"
    gui.ResetOnSpawn = false
    gui.Parent = CoreGui

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0.8, 0, 0.6, 0)
    mainFrame.Position = UDim2.new(0.1, 0, 0.2, 0)
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    mainFrame.Active = true

    -- TITLE
    local title = Instance.new("TextLabel")
    title.Text = "ADVANCED EXECUTOR"
    title.Size = UDim2.new(1, 0, 0.1, 0)
    title.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
    title.TextColor3 = Color3.new(1, 0, 0)
    title.Font = Enum.Font.GothamBold
    title.TextScaled = true

    -- SCRIPT INPUT
    local textBox = Instance.new("TextBox")
    textBox.PlaceholderText = "Enter Lua script here (supports require())..."
    textBox.Size = UDim2.new(0.9, 0, 0.5, 0)
    textBox.Position = UDim2.new(0.05, 0, 0.15, 0)
    textBox.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    textBox.TextColor3 = Color3.new(1, 1, 1)
    textBox.TextXAlignment = Enum.TextXAlignment.Left
    textBox.TextYAlignment = Enum.TextYAlignment.Top
    textBox.MultiLine = true
    textBox.TextWrapped = true

    -- BUTTONS
    local executeBtn = Instance.new("TextButton")
    executeBtn.Text = "‚ñ∂ EXECUTE"
    executeBtn.Size = UDim2.new(0.4, 0, 0.1, 0)
    executeBtn.Position = UDim2.new(0.05, 0, 0.7, 0)
    executeBtn.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
    executeBtn.TextColor3 = Color3.new(1, 1, 1)

    local speedBtn = Instance.new("TextButton")
    speedBtn.Text = "‚ö° SPEEDHACK"
    speedBtn.Size = UDim2.new(0.4, 0, 0.1, 0)
    speedBtn.Position = UDim2.new(0.55, 0, 0.7, 0)
    speedBtn.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
    speedBtn.TextColor3 = Color3.new(1, 1, 1)

    local backdoorBtn = Instance.new("TextButton")
    backdoorBtn.Text = "üîì BACKDOOR"
    backdoorBtn.Size = UDim2.new(0.4, 0, 0.1, 0)
    backdoorBtn.Position = UDim2.new(0.05, 0, 0.82, 0)
    backdoorBtn.BackgroundColor3 = Color3.fromRGB(120, 0, 200)
    backdoorBtn.TextColor3 = Color3.new(1, 1, 1)

    local clearBtn = Instance.new("TextButton")
    clearBtn.Text = "üóëÔ∏è CLEAR CACHE"
    clearBtn.Size = UDim2.new(0.4, 0, 0.1, 0)
    clearBtn.Position = UDim2.new(0.55, 0, 0.82, 0)
    clearBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    clearBtn.TextColor3 = Color3.new(1, 1, 1)

    -- ASSEMBLY
    title.Parent = mainFrame
    textBox.Parent = mainFrame
    executeBtn.Parent = mainFrame
    speedBtn.Parent = mainFrame
    backdoorBtn.Parent = mainFrame
    clearBtn.Parent = mainFrame
    mainFrame.Parent = gui

    EnableMobileDrag(mainFrame)

    -- FUNCTIONALITY
    executeBtn.MouseButton1Click:Connect(function()
        local script = textBox.Text
        if script and script ~= "" then
            local success, errorMsg = AdvancedLoadString(script)
            if success then
                ShowNotification("‚úÖ Script executed with require support!", Color3.fromRGB(0, 200, 0))
            else
                ShowNotification("‚ùå Error: " .. tostring(errorMsg), Color3.fromRGB(200, 0, 0))
            end
        end
    end)

    speedBtn.MouseButton1Click:Connect(function()
        -- Speedhack menu code here (from previous version)
        ShowNotification("Speedhack menu coming soon...", Color3.fromRGB(200, 200, 0))
    end)

    backdoorBtn.MouseButton1Click:Connect(function()
        CreateBackdoorMenu()
        ShowNotification("Backdoor menu activated!", Color3.fromRGB(150, 0, 255))
    end)

    clearBtn.MouseButton1Click:Connect(function()
        _G.ScriptCache = {}
        ShowNotification("Cache cleared!", Color3.fromRGB(200, 200, 0))
    end)

    return gui
end

-- AUTO START --
task.spawn(function()
    task.wait(2)
    mainGui = CreateMainMenu()
    ShowNotification("üöÄ Advanced Executor Loaded!\nSupports require() & backdoor", Color3.fromRGB(0, 100, 200))
end)

print("Advanced executor with backdoor support activated!")
